env_type: "halfcheetah"  # halfcheetah, hopper, walker2d
run_type: "pipeline"  # "core", "pipeline", or "test"
hf_project: 'ARDT-Internal' # personal project, or ARDT-Project, or ARDT-Internal

trained_model_names: ['local_18', 'local_17', 'local_16', 'local_10', 'local_5', 'cluster_3', 'cluster_4', 'cluster_5']
trained_model_types: ['arrl-sgld', 'arrl-sgld', 'arrl-sgld', 'arrl-sgld', 'arrl-sgld', 'arrl-sgld', 'arrl-sgld', 'arrl-sgld']
trained_model_paths: ['evaluation_protocol/trained-models/arrl-sgld/local/18', 'evaluation_protocol/trained-models/arrl-sgld/local/17', 'evaluation_protocol/trained-models/arrl-sgld/local/16', 'evaluation_protocol/trained-models/arrl-sgld/local/10', 'evaluation_protocol/trained-models/arrl-sgld/local/5', 'evaluation_protocol/trained-models/arrl-sgld/cluster/3', 'evaluation_protocol/trained-models/arrl-sgld/cluster/4', 'evaluation_protocol/trained-models/arrl-sgld/cluster/5']

eval_type: "batch_agent_adv"  # no_adv, env_adv, agent_adv, batch_agent_adv, batch_noadv
eval_steps: 1000  # 1000 is the default in DT
eval_target_return: 2000  # note this should depend on environment and steps!! 12k is for halfcheetah and 1000 steps for example
eval_iters: 256  # ensure robust evaluation

# only if using an explicit adversary!! i.e. eval_type = "agent_adv"
adv_model_names: ['randagent', 'zeroagent']
adv_model_types: ['randagent', 'zeroagent']
adv_model_paths: ['evaluation_protocol/trained-models/randagent/model_halfcheetah.json', 'evaluation_protocol/trained-models/zeroagent/model_halfcheetah.json']
