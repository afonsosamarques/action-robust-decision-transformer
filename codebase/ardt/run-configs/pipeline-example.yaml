environment_config:
  env_type: "halfcheetah"  # halfcheetah, hopper, walker2d
  max_ep_len: 1000  # limit episode length for offline dataset
  returns_scale: 1000  # scale returns, 1000 to match original DT implementation
  max_ep_return: 12000  # max "possible" returns per episode of max len

dataset_config:
  is_local: true  # true, false, whether it is stored locally or up on HF
  online_policy_name: "dataset_combo"  # d4rl, rarl, arrl_nrdmp, arrl_prmdp, dataset_combo, randagent, etc.
  dataset_type: "train"  # train, test, expert
  dataset_version: "v1"  # fill only if there is any type of versioning to the dataset being considered, otherwise leave blank

model_config:
  agent_type: "ardt-full"  # dt, ardt-simplest, ardt-vanilla, ardt-full
  context_size: [20]  # these are for different parameter combinations to try!! | original: 20 (depends a bit on env)
  lambda1: [1.0]  # these are for different parameter combinations to try!!
  lambda2: [500.0]  # these are for different parameter combinations to try!

training_config:
  train_steps: 2  # 6 => 10**6
  train_batch_size: 32  # 32/64
  learning_rate: [-4]  # these are for different parameter combinations to try!! e.g. -4 => 10**-4 | original: -4
  weight_decay: [-4]  # these are for different parameter combinations to try!! e.g. -4 => 10**-4 | original: -4
  max_grad_norm: [0.25]  # these are for different parameter combinations to try!! | original: 0.25
  warmup_steps: [1]  # these are for different parameter combinations to try!! again 4 => 10**4 | original: 10**5

evaluation_config:
  is_eval: false  # whether to run evaluation
  eval_type: "env_adv"  # no_adv, env_adv, agent_adv; ignored if is_eval is false
  eval_target_return: 12000  # note this should depend on environment!! 12k/6k for halfcheetah for example
  eval_iters: 2  # just enough to get some CLT going
  # only if using an explicit adversary!! i.e. eval_type = "agent_adv"
  adv_model_names: ['ardt_vanilla_halfcheetah-d4rl_expert', 'ardt_full_halfcheetah-d4rl_expert']  # names from models stored on the repo
  adv_model_types: ['ardt-vanilla', 'ardt-full']  # dt, ardt-simplest, ardt-vanilla, ardt-full

admin_config:
  wandb_project: "ARDT-Internal"  # "afonsosamarques", "ARDT-Project", "ARDT-Internal"
  hf_project: "ARDT-Internal"  # "afonsosamarques", "ARDT-Project", "ARDT-Internal"
  run_type: "test"  # "core", "pipeline", or "test"
  is_verbose: true  # whether to print anything at all
  print_tracebacks: false  # whether to print tracebacks of errors
